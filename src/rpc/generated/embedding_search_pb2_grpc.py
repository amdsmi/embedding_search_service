# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import embedding_search_pb2 as embedding__search__pb2


class EmbeddingSearchStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add_embedding = channel.unary_unary(
                '/embedding_search.EmbeddingSearch/add_embedding',
                request_serializer=embedding__search__pb2.AddEmbeddingRequest.SerializeToString,
                response_deserializer=embedding__search__pb2.AddEmbeddingReplay.FromString,
                )
        self.update_embedding = channel.unary_unary(
                '/embedding_search.EmbeddingSearch/update_embedding',
                request_serializer=embedding__search__pb2.UpdateEmbeddingRequest.SerializeToString,
                response_deserializer=embedding__search__pb2.UpdateEmbeddingReply.FromString,
                )
        self.delete_embedding = channel.unary_unary(
                '/embedding_search.EmbeddingSearch/delete_embedding',
                request_serializer=embedding__search__pb2.DeleteEmbeddingRequest.SerializeToString,
                response_deserializer=embedding__search__pb2.DeleteEmbeddingRequest.FromString,
                )
        self.search_embedding = channel.unary_unary(
                '/embedding_search.EmbeddingSearch/search_embedding',
                request_serializer=embedding__search__pb2.SearchEmbeddingRequest.SerializeToString,
                response_deserializer=embedding__search__pb2.SearchEmbeddingReply.FromString,
                )


class EmbeddingSearchServicer(object):
    """Missing associated documentation comment in .proto file."""

    def add_embedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_embedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_embedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search_embedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmbeddingSearchServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add_embedding': grpc.unary_unary_rpc_method_handler(
                    servicer.add_embedding,
                    request_deserializer=embedding__search__pb2.AddEmbeddingRequest.FromString,
                    response_serializer=embedding__search__pb2.AddEmbeddingReplay.SerializeToString,
            ),
            'update_embedding': grpc.unary_unary_rpc_method_handler(
                    servicer.update_embedding,
                    request_deserializer=embedding__search__pb2.UpdateEmbeddingRequest.FromString,
                    response_serializer=embedding__search__pb2.UpdateEmbeddingReply.SerializeToString,
            ),
            'delete_embedding': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_embedding,
                    request_deserializer=embedding__search__pb2.DeleteEmbeddingRequest.FromString,
                    response_serializer=embedding__search__pb2.DeleteEmbeddingRequest.SerializeToString,
            ),
            'search_embedding': grpc.unary_unary_rpc_method_handler(
                    servicer.search_embedding,
                    request_deserializer=embedding__search__pb2.SearchEmbeddingRequest.FromString,
                    response_serializer=embedding__search__pb2.SearchEmbeddingReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'embedding_search.EmbeddingSearch', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmbeddingSearch(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def add_embedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/embedding_search.EmbeddingSearch/add_embedding',
            embedding__search__pb2.AddEmbeddingRequest.SerializeToString,
            embedding__search__pb2.AddEmbeddingReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_embedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/embedding_search.EmbeddingSearch/update_embedding',
            embedding__search__pb2.UpdateEmbeddingRequest.SerializeToString,
            embedding__search__pb2.UpdateEmbeddingReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_embedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/embedding_search.EmbeddingSearch/delete_embedding',
            embedding__search__pb2.DeleteEmbeddingRequest.SerializeToString,
            embedding__search__pb2.DeleteEmbeddingRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def search_embedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/embedding_search.EmbeddingSearch/search_embedding',
            embedding__search__pb2.SearchEmbeddingRequest.SerializeToString,
            embedding__search__pb2.SearchEmbeddingReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
